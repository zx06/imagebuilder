name: docker
on:
  push:
    branches:
      - "main"

jobs:
  docker:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    env:
      BASE_DIR: ".github/workflows/tasks"
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Checkout
        uses: actions/checkout@v4

      # - uses: dorny/paths-filter@v3
      #   id: filter
      #   with:
      #     filters: |
      #       baseimage:
      #         - '${{ env.BASE_DIR }}/baseimage/**'
      #       frps:
      #         - '${{ env.BASE_DIR }}/frps/**'
      #       deploytools:
      #         - '${{ env.BASE_DIR }}/deploytools/**'
      #       debian-with-utils:
      #         - '${{ env.BASE_DIR }}/debian-with-utils/**'
      #       debug-tools:
      #         - '${{ env.BASE_DIR }}/debug-tools/**'
      #       golang:
      #         - '${{ env.BASE_DIR }}/golang/**'
      #       sonar-scanner-cli:
      #         - '${{ env.BASE_DIR }}/sonar-scanner-cli/**'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push baseimage
        # if: steps.filter.outputs.baseimage == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ env.BASE_DIR }}/baseimage
          push: true
          tags: |
            ghcr.io/zx06/baseimage:${{ steps.date.outputs.date }}
            ${{ secrets.DOCKERHUB_USERNAME }}/baseimage:${{ steps.date.outputs.date }}

      - name: Build and push frps
        # if: steps.filter.outputs.frps == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ env.BASE_DIR }}/frps
          push: true
          tags: |
            ghcr.io/zx06/frps:latest
            ghcr.io/zx06/frps:${{ steps.date.outputs.date }}
            ${{ secrets.DOCKERHUB_USERNAME }}/frps:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/frps:${{ steps.date.outputs.date }}

      - name: Build and push deploytools
        # if: steps.filter.outputs.deploytools == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ env.BASE_DIR }}/deploytools
          push: true
          tags: |
            ghcr.io/zx06/deploytools:${{ steps.date.outputs.date }}
            ${{ secrets.DOCKERHUB_USERNAME }}/deploytools:${{ steps.date.outputs.date }}

      - name: Build and push debian-with-utils
        # if: steps.filter.outputs.debian-with-utils == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ env.BASE_DIR }}/debian-with-utils
          push: true
          tags: |
            ghcr.io/zx06/debian-with-utils:${{ steps.date.outputs.date }}
            ${{ secrets.DOCKERHUB_USERNAME }}/debian-with-utils:${{ steps.date.outputs.date }}

      - name: Build and push debug-tools
        # if: steps.filter.outputs.debug-tools == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ env.BASE_DIR }}/debug-tools
          push: true
          tags: |
            ghcr.io/zx06/debug-tools:${{ steps.date.outputs.date }}
            ${{ secrets.DOCKERHUB_USERNAME }}/debug-tools:${{ steps.date.outputs.date }}
      - name: Build and push poddebug
        # if: steps.filter.outputs.debug-tools == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          context: ${{ env.BASE_DIR }}/poddebug
          push: true
          tags: |
            ghcr.io/zx06/poddebug:${{ steps.date.outputs.date }}
            ${{ secrets.DOCKERHUB_USERNAME }}/poddebug:${{ steps.date.outputs.date }}

      - name: golang mirror
        # if: steps.filter.outputs.golang == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ env.BASE_DIR }}/golang
          push: true
          tags: |
            ghcr.io/zx06/golang:1.22
      - name: sonar-scanner-cli mirror
        # if: steps.filter.outputs.sonar-scanner-cli == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ env.BASE_DIR }}/sonar-scanner-cli
          push: true
          tags: |
            ghcr.io/zx06/sonar-scanner-cli:11
      - name: python27-centos6
        # if: steps.filter.outputs.sonar-scanner-cli == 'true'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          context: ${{ env.BASE_DIR }}/python27-centos6
          push: true
          tags: |
            ghcr.io/zx06/python27-centos6:${{ steps.date.outputs.date }}
      # - name: Build and push centos7-py37
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ${{ env.BASE_DIR }}/python
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/centos7-py37:${{ steps.date.outputs.date }}

      # - name: Build and push centos7-python3.8
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ${{ env.BASE_DIR }}/python
      #     file: ./python/Dockerfile.centos7-python3.8
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/centos7-python3.8:${{ steps.date.outputs.date }}
